name: Deploy Application

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PRIVATE_KEY }}

    - name: Deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'

        # Cambiar al directorio del proyecto o clonar si no existe
        if [ ! -d "/home/ec2-user/TellMe" ]; then
          sudo git clone https://github.com/iliestefa/TellMe.git /home/ec2-user/TellMe
        else
          cd /home/ec2-user/TellMe
          sudo git reset --hard # Opcional: limpia cambios locales
          sudo git pull origin main
        fi

        # Crear el archivo .env y asegurarse de que se tengan permisos para escribir en Ã©l
        sudo bash -c "echo 'RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}' > /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'RABBITMQ_VHOST=${{ secrets.RABBITMQ_VHOST }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'QUEUE=${{ secrets.QUEUE }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'WS_SERVER_URL=${{ secrets.WS_SERVER_URL }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REACT_APP_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REACT_APP_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'MONGO_URI=${{ secrets.MONGO_URI }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'REDIS_URL=${{ secrets.REDIS_URL }}' >> /home/ec2-user/TellMe/server/.env"
        sudo bash -c "echo 'SERVER_PORT=${{ secrets.SERVER_PORT }}' >> /home/ec2-user/TellMe/server/.env"

        # Copiar el archivo .env a otras ubicaciones
        sudo cp /home/ec2-user/TellMe/server/.env /home/ec2-user/TellMe/client/.env
        sudo cp /home/ec2-user/TellMe/server/.env /home/ec2-user/TellMe/message-service/.env

        # Construir y desplegar los contenedores
        cd /home/ec2-user/TellMe
        docker-compose pull
        docker-compose up --build -d

        EOF